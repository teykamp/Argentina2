<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spCharacter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>spEntityParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>charspeed = 1;

dashspeed = 3;
instance_create(x,y,obCamera);

//Dash
dashX = 0;
dashY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

if keyboard_check(ord("W"))
{
    if keyboard_check(ord("A"))
    {
        motion_add(135, charspeed);
    }
    else if keyboard_check(ord("D"))
    {
        motion_add(45, charspeed);            
    }
    else
    motion_add(90, charspeed); 
}
else if keyboard_check(ord("S"))
{
    if keyboard_check(ord("A"))
    {
        motion_add(225, charspeed);
    }
    else if keyboard_check(ord("D"))
    {
        motion_add(315, charspeed);
    }
    else
    motion_add(270, charspeed);
}
else if keyboard_check(ord("A"))
{
    motion_add(180, charspeed)
}
else if keyboard_check(ord("D"))
{
    motion_add(0, charspeed)
}

speed *= 0.85;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
//Horizontal
if place_meeting(x + hspeed, y, obColliderParent)
{
    while !place_meeting(x + sign(hspeed),y,obColliderParent)
    {
        x += sign(hspeed);
    }
    hspeed = 0
}
//Vertical
if place_meeting(x, y + vspeed, obColliderParent)
{
    while !place_meeting(x,y + sign(vspeed),obColliderParent)
    {
        y += sign(vspeed);
    }
    vspeed = 0
}
//Both
if place_meeting(x + hspeed,y + vspeed, obColliderParent)
{
    scanDir = direction;
    while !place_meeting(x + lengthdir_x(1,scanDir),y + lengthdir_y(1,scanDir),obColliderParent)
    {
        x += lengthdir_x(1,scanDir);
        y += lengthdir_y(1,scanDir);
    }
    x -= lengthdir_x(1,scanDir);
    y -= lengthdir_y(1,scanDir);
    hspeed = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dash Stop
if point_distance(x + hspeed,y + vspeed,dashX,dashY) &lt; speed
{
    scanDir = direction;
    limit = point_distance(x,y,dashX,dashY);
    while point_distance(x,y,dashX,dashY) &gt; 2 and limit and !place_meeting(x,y,obColliderParent)
    {
        x += lengthdir_x(1,scanDir);
        y += lengthdir_y(1,scanDir);
        limit -= 1;
    }
    x -= lengthdir_x(1,scanDir);
    y -= lengthdir_y(1,scanDir);
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Aftershadow
instance_create(x,y,obAftershadow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dash
motion_add(point_direction(x, y, mouse_x, mouse_y), dashspeed * sqrt(point_distance(x,y,mouse_x,mouse_y) / 2))
dashX = mouse_x;
dashY = mouse_y;

//Screenshake
global.screenshake = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
