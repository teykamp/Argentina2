<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spCharacter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>spEntityParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
charspeed = 1;
dashspeed = 3;
selectionIndex = 0;
index = 0;

instance_create(x,y,obCamera);

//Dash
dashX = 0;
dashY = 0;

//Gun
weaponCooldown = 0;
weaponCooldownMultiplier = 1;
showInventory = false;

//Constants
spriteSize = 128;
hotbarWidth = 768
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory
hotbar = array_create(5);
stash = array_create(20);
holding = 0;

//Starting Gear
hotbar[0] = 0;
hotbar[1] = 0;
hotbar[2] = 0;
hotbar[3] = 0;
hotbar[4] = 0;

/*
Item Codes
00 Empty
01 Starting Gun
02 Starting Blade
*/

for (var i = 0; i &lt; 20; i ++)
stash[i] = choose(1,2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

if keyboard_check(ord("W"))
{
    if keyboard_check(ord("A"))
    {
        motion_add(135, charspeed);
    }
    else if keyboard_check(ord("D"))
    {
        motion_add(45, charspeed);            
    }
    else
    motion_add(90, charspeed); 
}
else if keyboard_check(ord("S"))
{
    if keyboard_check(ord("A"))
    {
        motion_add(225, charspeed);
    }
    else if keyboard_check(ord("D"))
    {
        motion_add(315, charspeed);
    }
    else
    motion_add(270, charspeed);
}
else if keyboard_check(ord("A"))
{
    motion_add(180, charspeed)
}
else if keyboard_check(ord("D"))
{
    motion_add(0, charspeed)
}

speed *= 0.85;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
//Horizontal
if place_meeting(x + hspeed, y, obColliderParent)
{
    while !place_meeting(x + sign(hspeed),y,obColliderParent)
    {
        x += sign(hspeed);
    }
    hspeed = 0
}
//Vertical
if place_meeting(x, y + vspeed, obColliderParent)
{
    while !place_meeting(x,y + sign(vspeed),obColliderParent)
    {
        y += sign(vspeed);
    }
    vspeed = 0
}
//Both
if place_meeting(x + hspeed,y + vspeed, obColliderParent)
{
    scanDir = direction;
    while !place_meeting(x + lengthdir_x(1,scanDir),y + lengthdir_y(1,scanDir),obColliderParent)
    {
        x += lengthdir_x(1,scanDir);
        y += lengthdir_y(1,scanDir);
    }
    x -= lengthdir_x(1,scanDir);
    y -= lengthdir_y(1,scanDir);
    hspeed = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dash Stop
if point_distance(x + hspeed,y + vspeed,dashX,dashY) &lt; speed
{
    scanDir = direction;
    limit = point_distance(x,y,dashX,dashY);
    while point_distance(x,y,dashX,dashY) &gt; 2 and limit and !place_meeting(x,y,obColliderParent)
    {
        x += lengthdir_x(1,scanDir);
        y += lengthdir_y(1,scanDir);
        limit -= 1;
    }
    x -= lengthdir_x(1,scanDir);
    y -= lengthdir_y(1,scanDir);
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Aftershadow
instance_create(x,y,obAftershadow);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gun Cooldown
weaponCooldown -= 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Close Inventory
if showInventory and instance_exists(obSave)
{
    save = instance_nearest(x,y,obSave);
    if point_distance(x,y,obSave.x,obSave.y) &gt; 64
    showInventory = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obItem">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !other.cooldown
{
    for(var i = 0; i &lt; 20; i ++)
    {
        if stash[i] == 0
        {
            stash[i] = other.index;
            with other instance_destroy();
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dash
switch (hotbar[1])
{
    case 2: //Starting blade
    motion_add(point_direction(x, y, mouse_x, mouse_y), dashspeed * sqrt(point_distance(x,y,mouse_x,mouse_y) / 2))
    //Screenshake
    global.screenshake = 4;
    break;
}
dashX = mouse_x;
dashY = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory
if showInventory
{
    //Stash
    if abs(window_mouse_get_x() - (view_wport[0] / 2)) &lt; spriteSize * 2.5 &amp;&amp; abs(window_mouse_get_y() - (view_hport[0] / 2)) &lt; spriteSize * 2
    {
        mouseCol = floor((window_mouse_get_x() - ((view_wport[0] / 2) - (2.5 * spriteSize))) / spriteSize);
        mouseRow = floor((window_mouse_get_y() - (spriteSize / 2) - ((view_hport[0] / 2) - (2.5 * spriteSize))) / spriteSize);
        index = mouseRow * 5 + mouseCol;
        temp = holding;
        holding = stash[index];
        stash[index] = temp;
    }
    
    //Hotbar
    if abs(window_mouse_get_x() - (view_wport[0] / 2)) &lt; spriteSize * 3 &amp;&amp; abs(window_mouse_get_y() - (view_hport[0] - spriteSize / 2)) &lt; spriteSize / 2
    {
        index = floor((window_mouse_get_x()  - ((view_wport[0] / 2) - (3 * spriteSize))) / spriteSize);
        if index &gt; 1
        index -= 1;
        
        temp = holding;
        holding = hotbar[index];
        hotbar[index] = temp;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot
if !showInventory &amp;&amp; weaponCooldown &lt; 0
{
    dir = point_direction(x,y,mouse_x,mouse_y);
    switch (hotbar[0])
    {
        case 1: //Starting Pistol
        action_create_object_motion(obBullet,x + lengthdir_x(24,dir),y + lengthdir_y(24,dir),16,dir);
        weaponCooldown = 10 * weaponCooldownMultiplier;
        //Screenshake
        global.screenshake = 2;
        with obCamera
        {
            motion_add(point_direction(mouse_x,mouse_y,x,y),8);
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hotbar
draw_sprite(spHUD,1,view_wport[0] / 2 - (hotbarWidth / 2),view_hport[0] - 512);

//Slots
draw_sprite(spWeaponIcons,hotbar[0],(view_wport[0] / 2) - 3 * spriteSize,view_hport[0] - spriteSize);
draw_sprite(spWeaponIcons,hotbar[1],(view_wport[0] / 2) - 2 * spriteSize,view_hport[0] - spriteSize);
draw_sprite(spWeaponIcons,hotbar[2],(view_wport[0] / 2) + 0 * spriteSize,view_hport[0] - spriteSize);
draw_sprite(spWeaponIcons,hotbar[3],(view_wport[0] / 2) + 1 * spriteSize,view_hport[0] - spriteSize);
draw_sprite(spWeaponIcons,hotbar[4],(view_wport[0] / 2) + 2 * spriteSize,view_hport[0] - spriteSize);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Health and Stamina
draw_sprite(spHUD,0,0,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory
if showInventory
for(var row = 0; row &lt; 4; row ++)
{
    for(var col = 0; col &lt; 5; col++)
    {
        index = 5 * row + col;
        draw_sprite(spWeaponIcons,stash[index],(view_wport[0] / 2) - (2.5 * spriteSize) + col * spriteSize,(view_hport[0] / 2) - (2 * spriteSize) + row * spriteSize);
    }
}

///Test
draw_line(view_wport[0] / 2 - 3 * spriteSize,800,view_wport[0] / 2 + 3 * spriteSize,800);
draw_text(64,64,floor((window_mouse_get_x() - ((view_wport[0] / 2) - (3 * spriteSize))) / spriteSize));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hand
draw_sprite(spWeaponIcons,holding,window_mouse_get_x() - 1 * spriteSize / 2,window_mouse_get_y() - 1 * spriteSize / 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory
if showInventory
{
    //Stash
    if abs(window_mouse_get_x() - (view_wport[0] / 2)) &lt; spriteSize * 2.5 &amp;&amp; abs(window_mouse_get_y() - (view_hport[0] / 2)) &lt; spriteSize * 2
    {
        mouseCol = floor((window_mouse_get_x() - ((view_wport[0] / 2) - (2.5 * spriteSize))) / spriteSize);
        mouseRow = floor((window_mouse_get_y() - (spriteSize / 2) - ((view_hport[0] / 2) - (2.5 * spriteSize))) / spriteSize);
        index = mouseRow * 5 + mouseCol;
        i = instance_create(x,y,obItem);
        i.direction = random(360);
        i.speed = 3;
        i.index = stash[index];
        i.cooldown = 60;
        stash[index] = 0;
    }
    
    //Hotbar
    if abs(window_mouse_get_x() - (view_wport[0] / 2)) &lt; spriteSize * 3 &amp;&amp; abs(window_mouse_get_y() - (view_hport[0] - spriteSize / 2)) &lt; spriteSize / 2
    {
        index = floor((window_mouse_get_x()  - ((view_wport[0] / 2) - (3 * spriteSize))) / spriteSize);
        if index &gt; 1
        index -= 1;
        i = instance_create(x,y,obItem);
        i.direction = random(360);
        i.speed = 3;
        i.index = hotbar[index];
        i.cooldown = 60;
        hotbar[index] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Inventory
if instance_exists(obSave) and !showInventory
{
    save = instance_nearest(x,y,obSave);
    if point_distance(x,y,obSave.x,obSave.y) &lt; 64
    {
        showInventory = true;
        if holding != 0
        {
            i = instance_create(x,y,obItem);
            i.direction = random(360);
            i.speed = 3;
            i.index = holding;
            i.cooldown = 60;
            holding = 0;
        }
    }
}
else
{
    showInventory = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
